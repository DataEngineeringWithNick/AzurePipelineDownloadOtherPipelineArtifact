name: DownloadArtifactFromDataFactoryCICDPipeline-$(Date:yyyyMMdd)$(Rev:.r)

#https://stackoverflow.com/questions/59369619/how-to-use-output-variables-in-release-pipeline

# How to use the run ID in the same job. To pass the run ID to another job, see the DifferentJobDownloadArtifact.yaml file.

trigger: none # manual trigger

pool:
  vmImage: "windows-latest"

parameters:
- name: PipelineID # ID of the pipeline you want to grab the artifact from. 
  type: number
  default: 1
- name: PipelineRunIDOptional
  type: number
  default: 0 # If 0, code will find the most recent successful run ID of the pipeline (specified by the PipelineID parameter above). 
             # Optionally, you can pass a specific run ID and the pipeline will grab the artifact from the other pipeline for that run.
             # To find a specific run ID for a pipeline, click on the pipeline in the DevOps UI, then click on a pipeline run and in the URL at the top will be a buildID=somenumber (ex: buildID=47). build ID and run ID are the same.

jobs:
- job: GetPipelineRunIDToDownloadArtifact
  steps:
  - checkout: self
    displayName: "Checkout Source Repo Code"
    
    # If PipelineRunIDOptional is 0 (default value), then find the latest successful pipeline run ID from the other pipeline.
    # Otherwise (else clause), use the PipelineRunIDOptional parameter and download the artifact from that specific run.
  - powershell: |
      if(${{ parameters.PipelineRunIDOptional }} -eq 0){
        [string]$LatestSuccessfulRunID=$(az pipelines build list --definition-ids ${{ parameters.PipelineID }} --detect true --org "https://dev.azure.com/DataEngineeringWithNick" --project "AzurePipelineDataFactoryCICD" --result succeeded --status completed --top 1 --query "reverse(sort_by(@, &finishTime)) | [0].id")
        Write-Host "Latest successful pipeline run ID that will be used to download the artifact: $LatestSuccessfulRunID"
        Write-Host "##vso[task.setvariable variable=PipelineRunID;isoutput=true]$LatestSuccessfulRunID"
      }else {
          Write-Host "The predefined pipeline run ID that will be used to download the artifact: ${{ parameters.PipelineRunIDOptional }}"
          Write-Host "##vso[task.setvariable variable=PipelineRunID;isOutput=true]${{ parameters.PipelineRunIDOptional }}"
      }
    env:
      AZURE_DEVOPS_EXT_PAT: $(System.AccessToken) # $(System.AccessToken) is a predefined variable used during the run. https://learn.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&tabs=yaml
      # AZURE_DEVOPS_EXT_PAT allows you to authenticate and use the Azure DevOps CLI: https://learn.microsoft.com/en-us/azure/devops/cli/azure-devops-cli-in-yaml?view=azure-devops
    name: StorePipelineRunID

  - task: DownloadPipelineArtifact@2
    displayName: "Download The ADF Artifact"
    inputs:
      buildType: "specific"
      runVersion: "specific"
      project: "AzurePipelineDataFactoryCICD"
      pipeline: ${{ parameters.PipelineID }}
      runId: $(StorePipelineRunID.PipelineRunID)
      artifactName: "ADFArtifact"
      targetpath: "$(Pipeline.Workspace)/MyPipelineFolder"

  - task: CmdLine@2
    displayName: "List Contents of the Pipeline ADF Artifact Workspace"
    inputs:
      script: dir
      workingDirectory: "$(Pipeline.Workspace)/MyPipelineFolder"