name: DownloadArtifactFromDataFactoryCICDPipeline-$(Date:yyyyMMdd)$(Rev:.r)

trigger: none

pool:
  vmImage: "windows-latest"

parameters:
- name: PipelineID
  type: number
  default: 1
# Pipeline ID of the pipeline you want to grab the artifact from the most recent successful run.
# To find the pipeline ID, 


jobs:
- job: GetLatestSuccessfulRunID # Automatically gets the latest run ID of the pipeline. This will be used to download the artifact later.
  steps:
  - bash: |
      LatestSuccessfulRunID=$(az pipelines build list --definition-ids ${{ parameters.PipelineID }} --detect true --org "https://dev.azure.com/DataEngineeringWithNick" --project "AzurePipelineDataFactoryCICD" --result succeeded --status completed --top 1 --query "reverse(sort_by(@, &finishTime)) | [0].id")
      echo "The latest successful pipeline RunID is: $LatestSuccessfulRunID"
      echo "##vso[task.setvariable variable=RunID;isOutput=true]$LastestSuccessfulRunID"
    name: GetPipelineRunIDScript
    displayName: "Get Lastest Successful Pipeline Run ].id"
    env:
      AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)


- job: DownloadOtherPipelineArtifact
  dependsOn: GetLatestSuccessfulRunID
  condition: succeeded()
  displayName: "Download Other Pipeline Artifact"
  variables:
    PipelineRunID: $[ dependencies.GetLatestSuccessfulRunID.outputs['GetPipelineRunIDScript.RunID'] ]
  steps:
  - task: DownloadPipelineArtifact@2
    displayName: "Download The ADF Artifact"
    inputs:
      buildType: "specific"
      project: "AzurePipelineDataFactoryCICD"
      definition: "$(PipelineRunID)"
      artifactName: "ADFArtifact"
      targetpath: "$(Pipeline.Workspace)/OtherPipelineFiles"
  
  - task: CmdLine@2
    displayName: "List Contents of the Pipeline ADF Artifact Workspace"
    inputs:
      script: dir
      workingDirectory: "$(Pipeline.Workspace)/OtherPipelineFiles"